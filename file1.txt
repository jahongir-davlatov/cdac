  sudo apt update
    sudo apt install apt-transport-https curl gnupg-agent ca-certificates software-properties-common -y
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
    sudo apt install docker-ce docker-ce-cli containerd.io -y
    sudo usermod -aG docker $USER
    newgrp docker
    docker version
    sudo systemctl status docker
    sudo systemctl start docker
    sudo systemctl enable docker
    sudo systemctl restart docker
    docker build -t myapp:v1 .

/////////////////////////////////////////////DOCKER-COMPOSE/////////////////////////////
    version: "3"
services:
  web10:
    image: httpd:latest
    ports:
      - "9010:80"
    volumes:
      - /home:/usr/local/apache2/htdocs

  web2:
    image: httpd:latest
    ports:
      - "9020:80"
    volumes:
      - /home:/usr/local/apache2/htdocs

  web3:
    image: httpd:latest
    ports:
      - "9030:80"
    volumes:
      - /home:/usr/local/apache2/htdocs

      
      docker-compose -f   docker-compose.yaml up -d
      docker-compose -f   docker-compose.yaml down
      docker-compose -f   docker-compose.yaml stop
      docker-compose ps


      DOCKERFILE



      /////////////////////////////////DOCKER-SWARM///////////////////////////////////////
      docker swarm init 
      docker node ls
      docker pull <images_name>
      docker stack deploy --with-registry-auth -c ./docker-compose.yaml stage 
      docker service  create --name web -p 8080:80 --replicas=3 nginx:latest
      docker stack ls
      docker stack service stage
      docker node update --label-add TAG=stage stage
      docker node update --label-add TAG=stage prod-1
      docker node inspect stage
      ADD in dokcer compose file
    deploy:
        placement:
            constraints:
                - "node.labels.TAG==stage"

/////////////////////////////////UFW FIREWALL UBUNTU ///////////////////////////////
    ufw allow 8080/tcp
    ufw allow ssh

////////////////////////////////**********GIT**********////////////////////////

    sudo apt install git -y
    sudo mkdir lab
    cd lab/
    sudo git clone https://github.com/amadou94/ditisslab.git
    cd ditisslab/
    sudo nano index.html
    sudo git add -A
    sudo git commit -m "First Commit"
    sudo git push
    sudo nano index.html 
    sudo git add -A
    sudo git commit -m "second Commit"
    sudo git push  
    mkdir cdac_test_folder && touch cdac_test_folder/.gitkeep   // For git folder in GitHub
    git add cdac_test_folder/
    git status 
    git commit -m "Folder commit"
    git push    
////////////////////////////////////////////JENKINS//////////////////////////////////
NEW ITEM > FREestyle project > OK
Jenkins > Configurations > Git HUb project "URL" > Source Code Management > Repo URL "URL GIT" > Branches to build "*/main" > Build Triger > Build triggers > Build Periodicaly  "*****" > SAVE

LAMBDA
SNS Server > Create topics > select standart > NAME > Create topic> Create subscripton >select protocol "Email" > create subscripton
S3
Create bucket > Default Settings

Create lambda > Create function > fun name >Runtime "Python" > Executive role > use a execting > Need create IAM role > roles > create role 
IAM
AWSLambdaBasicExecution Role > next > name > create role

Lambda > add Desination > condition > onsuces > Destination > SNS Server choose > save

Triger Add > Search S3 > select bucket name > suffix .docx > finish 
